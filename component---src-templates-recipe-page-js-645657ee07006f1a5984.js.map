{"version":3,"sources":["webpack:///./src/components/recipeInfoCard.js","webpack:///./src/components/ingredients.js","webpack:///./src/components/directions.js","webpack:///./src/templates/recipe-page.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/iconLabel.js","webpack:///./src/utils/fixFontAwesome.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["RecipeInfoCard","_ref","name","image","serves","time","react_default","a","createElement","Container","fluid","className","recipeInfoCardStyles","container","Row","Col","lg","md","sm","xs","gatsby_image_default","style","paddingTop","iconLabel","faIcon","faUsers","label","faClock","Ingredients","ingredients","ingredientsStyles","header","faListAlt","iconColor","textColor","list","map","ingredient","Form","Check","Directions","directions","Fragment","directionsStyles","faThList","direction","RecipePage","_data$recipesJson","data","recipesJson","fluidImage","childImageSharp","layout","s","recipeInfoCard_RecipeInfoCard","ingredients_Ingredients","directions_Directions","query","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","render","finalData","props","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","shape","pathname","IconLabel","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_1__","_ref$block","block","_ref$iconColor","_ref$textColor","Element","icon","color","marginRight","config","autoAddCss","Header","siteTitle","headerStyles","background","text","gatsby_browser_entry","to","link","react_fontawesome_index_es","faUtensils","Layout","site","siteMetadata","title","_755544856","node"],"mappings":"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","file":"component---src-templates-recipe-page-js-645657ee07006f1a5984.js","sourcesContent":["import React from \"react\";\nimport Img from \"gatsby-image\"\nimport {Col, Row, Container} from \"react-bootstrap\";\nimport {faUsers, faClock} from '@fortawesome/free-solid-svg-icons'\nimport recipeInfoCardStyles from \"../styles/recipeInfoCard.module.css\"\nimport {IconLabel} from \"./iconLabel\";\n\n\nexport const RecipeInfoCard = ({name, image, serves, time}) => {\n    return (\n        <Container fluid className={recipeInfoCardStyles.container}>\n            <Row>\n                <Col lg={5} md={6} sm={6} xs={6}>\n                    <Img className={recipeInfoCardStyles.image} fluid={image}/>\n                </Col>\n                <Col lg={7} md={6} sm={6} xs={6} style={{paddingTop: \".5em\"}}>\n                    <h2>{name}</h2>\n                    <IconLabel faIcon={faUsers} label={serves}/>\n                    <IconLabel faIcon={faClock} label={time}/>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\n","import React from \"react\";\nimport {Container, Form} from \"react-bootstrap\";\nimport {faListAlt} from \"@fortawesome/free-solid-svg-icons/index\";\nimport ingredientsStyles from \"../styles/ingredients.module.css\"\nimport {IconLabel} from \"./iconLabel\";\n\n\nexport const Ingredients = ({ingredients}) => {\n    return (\n        <Container fluid className={ingredientsStyles.container}>\n            <h3 className={ingredientsStyles.header}>\n                <IconLabel faIcon={faListAlt} label=\"Ingredients\" iconColor=\"#1f2a65\" textColor=\"#000000\"/>\n            </h3>\n            <div className={ingredientsStyles.list}>\n                {ingredients.map((ingredient) => <Form.Check label={ingredient}/>)}\n            </div>\n        </Container>\n    );\n};\n\n","import React from \"react\";\nimport {faThList} from \"@fortawesome/free-solid-svg-icons/index\";\nimport directionsStyles from \"../styles/directions.module.css\"\nimport {IconLabel} from \"./iconLabel\";\n\n\nexport const Directions = ({directions}) => {\n    return (\n        <>\n            <h3 className={directionsStyles.header}>\n                <IconLabel faIcon={faThList} label=\"Directions\" iconColor=\"#1f2a65\" textColor=\"#000000\"/>\n            </h3>\n            <ol className={directionsStyles.list}>\n                {directions.map((direction) => <li><p>{direction}</p></li>)}\n            </ol>\n        </>\n    );\n};\n\n","import React from \"react\";\nimport Layout from \"../components/layout\";\nimport { graphql } from \"gatsby\";\nimport {Container, Row, Col} from \"react-bootstrap\";\nimport {RecipeInfoCard} from \"../components/recipeInfoCard\";\nimport {Ingredients} from \"../components/ingredients\";\nimport {Directions} from \"../components/directions\";\n\nconst RecipePage = ({data}) => {\n    const {\n        recipesJson: {\n            name,\n            serves,\n            time,\n            ingredients,\n            directions,\n            image: {\n                childImageSharp: {fluid: fluidImage}\n            }\n        }\n    } = data;\n\n    return (\n        <Layout>\n            <Container fluid>\n                <Row>\n                    <Col lg={6} md={6} s={6} xs={12}>\n                        <RecipeInfoCard name={name} image={fluidImage} serves={serves} time={time}/>\n                        <Ingredients ingredients={ingredients}/>\n                    </Col>\n\n                    <Col lg={6} md={6} s={6} xs={12}>\n                        <Directions directions={directions}/>\n                    </Col>\n                </Row>\n            </Container>\n        </Layout>\n    );\n};\n\nexport default RecipePage;\n\nexport const query = graphql`\n  query($slug: String!) {\n    recipesJson(fields: { slug: { eq: $slug } }) {\n      name,\n      serves,\n      time,\n      ingredients,\n      directions,\n      image {\n        childImageSharp {\n          fluid(maxHeight: 300, maxWidth: 300) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  }\n`;","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst defaultColor = \"rgba(0,0,0,.6)\";\n\nexport const IconLabel = ({faIcon,\n                          label,\n                          block=true,\n                          iconColor=defaultColor,\n                          textColor=defaultColor}) => {\n\n    const Element = block ? 'div' : 'span';\n    return (\n        <Element>\n            <FontAwesomeIcon icon={faIcon} style={{\n                color: iconColor,\n                marginRight: 5\n            }}/>\n            <span style={{color: textColor}}>{label}</span>\n        </Element>\n    );\n};\n\n","/**\n * Fixes a weird issue with font awesome where there is a flash of a giant icons on page load.\n * Must be included first at the top level layout file.\n */\n\nimport '@fortawesome/fontawesome-svg-core/styles.css';\nimport { config } from '@fortawesome/fontawesome-svg-core';\nconfig.autoAddCss = false;","import { Link } from \"gatsby\"\nimport React from \"react\"\nimport {faUtensils} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport headerStyles from \"../styles/header.module.css\"\n\nconst Header = ({ siteTitle }) => (\n  <header className={headerStyles.background}>\n      <h1 className={headerStyles.text}>\n        <Link to=\"/\" className={headerStyles.link}>\n            <FontAwesomeIcon icon={faUtensils} className={headerStyles.icon}/>\n            {siteTitle}\n        </Link>\n      </h1>\n  </header>\n);\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport \"../utils/fixFontAwesome\"\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport {Container} from \"react-bootstrap\";\nimport Header from \"./header\"\nimport 'bootstrap/dist/css/bootstrap.css';\nimport \"../styles/global.css\";\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n          <Container fluid>\n              {children}\n          </Container>\n          <div>Nice2</div>\n      </>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout\n"],"sourceRoot":""}